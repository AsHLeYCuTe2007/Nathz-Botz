let fontEnabled = true;

function formatFont(text) {
  const fontMapping = {
    a: "ùñ∫", b: "ùñª", c: "ùñº", d: "ùñΩ", e: "ùñæ", f: "ùñø", g: "ùóÄ", h: "ùóÅ", i: "ùóÇ", j: "ùóÉ", k: "ùóÑ", l: "ùóÖ", m: "ùóÜ",
    n: "ùóá", o: "ùóà", p: "ùóâ", q: "ùóä", r: "ùóã", s: "ùóå", t: "ùóç", u: "ùóé", v: "ùóè", w: "ùóê", x: "ùóë", y: "ùóí", z: "ùóì",
    A: "ùñ†", B: "ùñ°", C: "ùñ¢", D: "ùñ£", E: "ùñ§", F: "ùñ•", G: "ùñ¶", H: "ùñß", I: "ùñ®", J: "ùñ©", K: "ùñ™", L: "ùñ´", M: "ùñ¨",
    N: "ùñ≠", O: "ùñÆ", P: "ùñØ", Q: "ùñ∞", R: "ùñ±", S: "ùñ≤", T: "ùñ≥", U: "ùñ¥", V: "ùñµ", W: "ùñ∂", X: "ùóë", Y: "ùñ∏", Z: "ùñπ"
  };

  let formattedText = "";
  for (const char of text) {
    if (fontEnabled && char in fontMapping) {
      formattedText += fontMapping[char];
    } else {
      formattedText += char;
    }
  }

  return formattedText;
}

const axios = require('axios');

module.exports.config = {
  name: 'cai',
  version: '1.0.0',
  role: 0,
  hasPrefix: false,
  aliases: ['characterai'],
  description: "Converse with AI characters like Gojo, Sukuna, etc.",
  usages: "cai [character] [query]",
  credits: 'Kaizenji',
  cooldown: 0,
  dependencies: {
    "axios": ""
  }
};

const characters = {
  gojo: "pai/gojo",
  sukuna: "pai/sukuna",
  rimuru: "pai/rimuru",
  cid: "pai/cid",
  luffy: "pai/luffy",
  rudeus: "pai/rudeus",
  ichigo: "pai/ichigo",
  naruto: "pai/naruto",
  boruto: "pai/boruto",
  deku: "pai/deku"
};

module.exports.run = async function({ api, event, args }) {
  const uid = event.senderID;
  const [character, ...queryArr] = args;
  const query = queryArr.join(' ');

  if (!character || !query) {
    const usageMessage = `Usage:\n${Object.keys(characters).map(c => `cai ${c} <query>`).join('\n')}`;
    return api.sendMessage(formatFont(usageMessage), event.threadID, event.messageID);
  }

  if (!characters[character]) {
    return api.sendMessage(formatFont('‚ùå | Invalid character! Use one of the following:\n' + Object.keys(characters).join(', ')), event.threadID, event.messageID);
  }

  try {
    const endpoint = `https://deku-rest-apis.ooguy.com/${characters[character]}?q=${encodeURIComponent(query)}&uid=${uid}`;
    const { data } = await axios.get(endpoint);

    api.sendMessage(formatFont(`${data.result}`), event.threadID, event.messageID);

  } catch (error) {
    api.sendMessage(formatFont('An error occurred while processing your request.'), event.threadID, event.messageID);
  }
};